// <auto-generated />
using System;
using DekoBimApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DekoBimApi.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20240210185309_daslköpadskm")]
    partial class daslköpadskm
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DekoBimApi.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Base64")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Name_")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Companys");
                });

            modelBuilder.Entity("DekoBimApi.Models.Discipline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name_")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Disciplines");
                });

            modelBuilder.Entity("DekoBimApi.Models.DownloadedFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DownloadCount")
                        .HasColumnType("int");

                    b.Property<string>("FileExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("productId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("productId");

                    b.ToTable("DownloadedFiles");
                });

            modelBuilder.Entity("DekoBimApi.Models.FileType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name_")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FileTypes");
                });

            modelBuilder.Entity("DekoBimApi.Models.Istatistics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DownloadCount")
                        .HasColumnType("int");

                    b.Property<int>("ViewCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Istatistics");
                });

            modelBuilder.Entity("DekoBimApi.Models.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name_")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("subdiciplineId")
                        .HasColumnType("int");

                    b.Property<string>("teknikozellik")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("subdiciplineId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("DekoBimApi.Models.Products", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("Debi")
                        .HasColumnType("int");

                    b.Property<string>("DigerDokuman")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FileTypeId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsExistRevit")
                        .HasColumnType("bit");

                    b.Property<bool?>("Isexistifcformat")
                        .HasColumnType("bit");

                    b.Property<string>("Kullanimkilavuzları")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Programlar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("autocad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("autocadtarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("autocadversiyon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("base64")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("basinc_kaybi")
                        .HasColumnType("int");

                    b.Property<int?>("companyId")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("diger")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ifcformat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ifctarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("ifcversiyon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isExistAutocad")
                        .HasColumnType("bit");

                    b.Property<bool?>("isExistSolidworks")
                        .HasColumnType("bit");

                    b.Property<string>("katalogfiyatliste")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("montajvideopath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("revit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("revittarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("revitversiyon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sartnameler")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sertifakalar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("siniflandirma")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("solidtarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("solidversiyon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("solidworks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tanitimvideopath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("teknik_ozellikdata")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("uygulama_alanlari")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("FileTypeId");

                    b.HasIndex("companyId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("DekoBimApi.Models.SubDiscipline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name_")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("disciplineId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("disciplineId");

                    b.ToTable("SubDisciplines");
                });

            modelBuilder.Entity("DekoBimApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DekoBimApi.Models.DownloadedFile", b =>
                {
                    b.HasOne("DekoBimApi.Models.Products", "product")
                        .WithMany()
                        .HasForeignKey("productId");

                    b.Navigation("product");
                });

            modelBuilder.Entity("DekoBimApi.Models.ProductCategory", b =>
                {
                    b.HasOne("DekoBimApi.Models.SubDiscipline", "subdicipline")
                        .WithMany()
                        .HasForeignKey("subdiciplineId");

                    b.Navigation("subdicipline");
                });

            modelBuilder.Entity("DekoBimApi.Models.Products", b =>
                {
                    b.HasOne("DekoBimApi.Models.ProductCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("DekoBimApi.Models.FileType", "FileType")
                        .WithMany()
                        .HasForeignKey("FileTypeId");

                    b.HasOne("DekoBimApi.Models.Company", "company")
                        .WithMany()
                        .HasForeignKey("companyId");

                    b.Navigation("Category");

                    b.Navigation("FileType");

                    b.Navigation("company");
                });

            modelBuilder.Entity("DekoBimApi.Models.SubDiscipline", b =>
                {
                    b.HasOne("DekoBimApi.Models.Discipline", "discipline")
                        .WithMany()
                        .HasForeignKey("disciplineId");

                    b.Navigation("discipline");
                });
#pragma warning restore 612, 618
        }
    }
}
