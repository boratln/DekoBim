@{
    var base64 = Context.Session.GetString("base64");
    var marka = Context.Session.GetString("marka");
    var website = Context.Session.GetString("website");

    var linkedin = Context.Session.GetString("linkedin");
    var facebook = Context.Session.GetString("facebook");
    var instragram = Context.Session.GetString("insta");

    var adres = Context.Session.GetString("adres");
    var email = Context.Session.GetString("email");
    var telefon = Context.Session.GetString("tel");

    var aciklama = Context.Session.GetString("aciklama");
    string previousProductName = null;
    string previosproductname2=null;
    string previousproductname3 = null;
    int count = (int)Context.Session.GetInt32("count");
}
@model ListModelView
<link rel="stylesheet" href="/css/mobil.css" />
<style>
    .additional-product {
        display: none;
        margin-top:2%;
    }
    .info-container {
        position: relative; /* Required for the absolute positioning of the pseudo-element */
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        padding: 20px 0;
    }

    .info-container::after {
        content: ""; /* Required for a pseudo-element */
        position: absolute;
        left: 50%; /* Position the line at the 50% width of the container */
        top: 0; /* Align the top of the line with the top of the container */
        bottom: 0; /* Align the bottom of the line with the bottom of the container */
        width: 1px; /* Width of the vertical line */
        background-color: #ccc; /* Color of the line, adjust as needed */
        transform: translateX(-50%); /* Center the line exactly at 50% */
    }


    /* Container for the logo and contact details */
    .brand-container {
        display: flex;
        align-items: center;
    }

    /* Contact information styling */
    .contact-info {
        display: flex;
        flex-direction: column;
        justify-content: flex-start;
        margin-left: 10px; /* Space between logo and text */
    }

        .contact-info img {
            max-width: 100px; /* Adjust as needed */
            margin-right: 10px; /* Space after the logo */
        }

    .social-media-buttons {
        display: flex;
        flex-direction: column; /* Stack items vertically */
        align-items: center; /* Center-align the items */
        margin-top: 6%;
        margin-right: 12%; /* Add some space to the right */
        padding: 20px 5px; /* Add padding inside the container for space around the content */
        border-radius: 10px; /* Add rounded corners for a smoother look */
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Optional: Add a subtle shadow for depth */
    }


.social-media-buttons h2 {
    font-size: 25px; /* Adjust font size for mobile */
    color: #333; /* Dark color for text */
    margin-bottom: 15px; /* Adjust space below the heading */
}

.button-container {
    display: flex; /* Lay out the buttons side by side */
    justify-content: center; /* Center the buttons horizontally */
    flex-wrap: wrap; /* Allow the buttons to wrap on smaller screens */
}

    .social-media-button {
        display: flex; /* Use flex to center the SVG icon inside the button */
        justify-content: center;
        align-items: center;
        margin: 0 12px; /* Horizontal space between buttons */
        width: 45px; /* Width for the buttons */
        height: 45px; /* Height for the buttons */
        border-radius: 50%; /* Make the buttons circular */
        border: none; /* Remove the border */
        background-color: #fff; /* White background */
        transition: all 0.3s ease; /* Smooth transition for hover effects */
        box-shadow: 0 2px 4px rgba(0,0,0,0.1); /* Subtle shadow for depth */
    }


/* Responsive adjustments for smaller screens */



    a {
        text-decoration: none;
        color: #007bff;
        transition: color 0.2s ease-in-out;
    }

        a:hover {
            text-decoration: underline;
            color: #0056b3;
        }
    .scrollable-container {
        display: flex; /* Use flex layout */
        flex-wrap: wrap; /* Allow items to wrap onto the next line */
        gap: 2%; /* Space between items */
        justify-content: space-between; /* Distribute space between items */
        padding: 10px;
        margin-top: 20px; /* Space above the container */
        overflow-y: auto; /* Enables vertical scrolling if necessary */
    }

    .item-container {
        flex-basis: calc(33% - 4%); /* Allocate width for each item - subtracting the gap */
        text-align: center; /* Center align the content */
        padding: 15px; /* Add padding to each item-container for spacing */
        box-shadow: 0 2px 5px rgba(0,0,0,0.1); /* Add a subtle shadow to each item-container */
        border-radius: 5px; /* Slightly round the corners of the item-containers */
        background-color: #f9f9f9; /* A light grey background color */
        margin-bottom: 2%; /* Add some margin to the bottom of each item-container */
        max-height: 300px; /* veya ihtiyacınıza uygun bir değer */
        overflow-y: auto; /* Dikey kaydırma çubuğunu etkinleştir */
        overflow-x: hidden; /* Yatay kaydırma çubuğunu gizle */
    }

        .item-container img {
            width: 24px; /* Increase the image width a little for better visibility */
            margin-bottom: 8px; /* Add some space below the image */
        }

        .item-container p {
            font-size: 18px; /* Increase the font size of the title */
            font-weight: bold;
            margin-bottom: 12px; /* Add space below the title */
           
        }

        /* Improve the link appearance */
        .item-container a {
            text-decoration: none;
            color: #007bff; /* Bootstrap's default link color for consistency */
            font-weight: bold;
            display: inline-block; /* Make the links inline-block for better control */
            margin: 5px 0; /* Add some margin to the top and bottom of the links */
            transition: color 0.3s ease; /* Transition for the color change on hover */
        }

            /* Add hover effects to links */
            .item-container a:hover {
                color: #0056b3; /* A darker shade when hovered for better interaction */
                text-decoration: underline; /* Underline on hover to indicate interactivity */
            }


</style>


<div class="info-container">
    <div class="brand-container">
        <img style="width:50%" src="data:image/png;base64,@base64" alt="@marka Logo" />
        <div class="contact-info">
            <b>Marka:</b> <span>@marka</span><br />
            <b>Web Site:</b> <a href="@website">@website</a><br />
            <b>Adres:</b> <span>@adres</span><br />
            <b>Email:</b> <a href="mailto:@email">@email</a><br />
            <b>Telefon:</b> <a href="tel:@telefon">@telefon</a>
        </div>
    </div>
    <div class="social-media-buttons">
        <h2>Sosyal Medya Hesapları</h2>
        <div class="button-container">

        <button class="social-media-button" type="button">
            <a href="@linkedin">
                <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-linkedin" viewBox="0 0 16 16">
                    <path d="M0 1.146C0 .513.526 0 1.175 0h13.65C15.474 0 16 .513 16 1.146v13.708c0 .633-.526 1.146-1.175 1.146H1.175C.526 16 0 15.487 0 14.854zm4.943 12.248V6.169H2.542v7.225zm-1.2-8.212c.837 0 1.358-.554 1.358-1.248-.015-.709-.52-1.248-1.342-1.248S2.4 3.226 2.4 3.934c0 .694.521 1.248 1.327 1.248zm4.908 8.212V9.359c0-.216.016-.432.08-.586.173-.431.568-.878 1.232-.878.869 0 1.216.662 1.216 1.634v3.865h2.401V9.25c0-2.22-1.184-3.252-2.764-3.252-1.274 0-1.845.7-2.165 1.193v.025h-.016l.016-.025V6.169h-2.4c.03.678 0 7.225 0 7.225z" />
                </svg>
            </a>
        </button>
        <button class="social-media-button" type="button">
            <a href="@facebook">
                <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-facebook" viewBox="0 0 16 16">
                    <path d="M16 8.049c0-4.446-3.582-8.05-8-8.05C3.58 0-.002 3.603-.002 8.05c0 4.017 2.926 7.347 6.75 7.951v-5.625h-2.03V8.05H6.75V6.275c0-2.017 1.195-3.131 3.022-3.131.876 0 1.791.157 1.791.157v1.98h-1.009c-.993 0-1.303.621-1.303 1.258v1.51h2.218l-.354 2.326H9.25V16c3.824-.604 6.75-3.934 6.75-7.951" />
                </svg>
            </a>
        </button>
        <button class="social-media-button" type="button">
            <a href="@instragram">
                <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-instagram" viewBox="0 0 16 16">
                    <path d="M8 0C5.829 0 5.556.01 4.703.048 3.85.088 3.269.222 2.76.42a3.9 3.9 0 0 0-1.417.923A3.9 3.9 0 0 0 .42 2.76C.222 3.268.087 3.85.048 4.7.01 5.555 0 5.827 0 8.001c0 2.172.01 2.444.048 3.297.04.852.174 1.433.372 1.942.205.526.478.972.923 1.417.444.445.89.719 1.416.923.51.198 1.09.333 1.942.372C5.555 15.99 5.827 16 8 16s2.444-.01 3.298-.048c.851-.04 1.434-.174 1.943-.372a3.9 3.9 0 0 0 1.416-.923c.445-.445.718-.891.923-1.417.197-.509.332-1.09.372-1.942C15.99 10.445 16 10.173 16 8s-.01-2.445-.048-3.299c-.04-.851-.175-1.433-.372-1.941a3.9 3.9 0 0 0-.923-1.417A3.9 3.9 0 0 0 13.24.42c-.51-.198-1.092-.333-1.943-.372C10.443.01 10.172 0 7.998 0zm-.717 1.442h.718c2.136 0 2.389.007 3.232.046.78.035 1.204.166 1.486.275.373.145.64.319.92.599s.453.546.598.92c.11.281.24.705.275 1.485.039.843.047 1.096.047 3.231s-.008 2.389-.047 3.232c-.035.78-.166 1.203-.275 1.485a2.5 2.5 0 0 1-.599.919c-.28.28-.546.453-.92.598-.28.11-.704.24-1.485.276-.843.038-1.096.047-3.232.047s-2.39-.009-3.233-.047c-.78-.036-1.203-.166-1.485-.276a2.5 2.5 0 0 1-.92-.598 2.5 2.5 0 0 1-.6-.92c-.109-.281-.24-.705-.275-1.485-.038-.843-.046-1.096-.046-3.233s.008-2.388.046-3.231c.036-.78.166-1.204.276-1.486.145-.373.319-.64.599-.92s.546-.453.92-.598c.282-.11.705-.24 1.485-.276.738-.034 1.024-.044 2.515-.045zm4.988 1.328a.96.96 0 1 0 0 1.92.96.96 0 0 0 0-1.92m-4.27 1.122a4.109 4.109 0 1 0 0 8.217 4.109 4.109 0 0 0 0-8.217m0 1.441a2.667 2.667 0 1 1 0 5.334 2.667 2.667 0 0 1 0-5.334" />
                </svg>
            </a>
        </button>
        </div>
    </div>
</div>
<div class="scrollable-container">
    <div class="item-container">
        <p style="font-size:20px;font-weight:bolder">Şartnameler</p>
        <hr style="height: 3px; background-color: black;">

        @foreach (var item in Model.Products.OrderBy(p => p.Name_)) // Ürün adına göre sırala
        {
            if (item.sartnameler != null && item.sartnameler.Any())
            {
                if (previousproductname3 != null && item.Name_ != previousproductname3)
                {
                    <hr />
                }

                int sartnamesayac = 1;

                <ul style="list-style-type:none;">
                    @foreach (var sartname in item.sartnameler)
                    {
                        var sartnameprogram = sartname.Trim();
                        if (!string.IsNullOrEmpty(sartnameprogram))
                        {
                            <li>
                                <img src="/img/word.png" style="width: 20px; vertical-align: middle;" alt="Word Icon">
                                <a class="download-program" style="text-decoration:none;color:black" href="data:application/vnd.openxmlformats-officedocument.wordprocessingml.document;base64,@sartnameprogram" download="@item.Name_ Şartname @sartnamesayac..docx" data-product-id="@item.Id">
                                    @item.Name_ Şartname @sartnamesayac
                                </a>
                            </li>
                            sartnamesayac++;
                        }
                    }
                </ul>

                previousproductname3 = item.Name_; // Mevcut ürün adını önceki ürün adı olarak güncelle
            }
        }
    </div>


    <div class="item-container">
        <p style="font-size:20px;font-weight:bolder">Sertifikalar</p>
        <hr style="height: 3px; background-color: black;">

        @foreach (var item in Model.Products.OrderBy(p => p.Name_)) // Ürün adına göre sırala
        {
            if (item.sertifakalar != null && item.sertifakalar.Any())
            {
                if (previosproductname2 != null && item.Name_ != previosproductname2)
                {
                    // Yeni bir ürün grubuna geçildiğinde bir <hr> etiketi ekle
                    <hr style="height: 1px; background-color: grey;">
                }

                int sertifikaSayac = 1;

                <ul style="list-style-type:none;">
                    @foreach (var sertifika in item.sertifakalar)
                    {
                        var trimmedSertifika = sertifika.Trim();
                        if (!string.IsNullOrEmpty(trimmedSertifika))
                        {
                            <li>
                                <img src="/img/word.png" style="width: 20px; vertical-align: middle;" alt="Word Icon">
                                <a class="download-program" style="text-decoration:none;color:black" href="data:application/vnd.openxmlformats-officedocument.wordprocessingml.document;base64,@trimmedSertifika" download="Sertifika@sertifikaSayac.docx" data-product-id="@item.Id">
                                    @item.Name_ Sertifika @sertifikaSayac
                                </a>
                            </li>
                            sertifikaSayac++;
                        }
                    }
                </ul>

                previosproductname2 = item.Name_; // Mevcut ürün adını önceki ürün adı olarak güncelle
            }
        }
    </div>

    <div class="item-container">
        <p style="font-size:20px;font-weight:bolder">Programlar</p>
        <hr style="height: 3px; background-color: black;">

        @foreach (var item in Model.Products.OrderBy(p => p.Name_)) // Ürün adına göre sırala
        {
            if (item.Programlar != null && item.Programlar.Any())
            {
                if (previousProductName != null && item.Name_ != previousProductName)
                {
                    <hr />
                }

                int programSayac = 1;

                <ul style="list-style-type:none;">
                    @foreach (var program in item.Programlar)
                    {
                        var trimmedProgram = program.Trim();
                        if (!string.IsNullOrEmpty(trimmedProgram))
                        {
                            <li>
                                <img src="/img/word.png" style="width: 20px; vertical-align: middle;" alt="Word Icon">
                                <a class="download-program" style="text-decoration:none;color:black" href="data:application/vnd.openxmlformats-officedocument.wordprocessingml.document;base64,@trimmedProgram" download="Program @programSayac..docx" data-product-id="@item.Id">
                                    @item.Name_ Program @programSayac
                                </a>
                            </li>
                            programSayac++;
                        }
                    }
                </ul>

                previousProductName = item.Name_; // Mevcut ürün adını önceki ürün adı olarak güncelle
            }
        }
    </div>
</div>
<div>
    <p class="header-section" style="clear:both;font-weight:bolder">GÜNCEL ÜRÜNLER</p>
    <p><a id="viewAllProducts" style="cursor:pointer; text-decoration:none; color:black;">Tüm Ürünleri (@Model.Products.Count Adet) Görüntüleyin</a></p>
</div>

<hr />
<div class="row" style="margin-top:10px">
    @foreach (var data in Model.Products.Select((value, index) => new { Value = value, Index = index }))
    {
        <div class="col-md-3 product-card @(data.Index >= 4 ? "additional-product" : "")">
            <div class="card" style="width: 12rem;height:100%">
                <a asp-controller="Products" asp-action="ProductDetail" asp-route-id="@data.Value.Id">
                    <img style="width: 100%; height: auto; object-fit: contain;" class="card-img-top" src="@(data.Value.base64 == null ? "/img/resimyok.png" : $"data:image/jpeg;base64,{data.Value.base64}")" alt="">
                </a>
                <div class="card-body">
                    <h5 class="card-title" style="margin-left:15%">@data.Value.Name_</h5>
                    @if (data.Value.teknik_ozellikdata != null && data.Value.teknik_ozellikdata.Any())
                    {
                        <ul style="list-style-type:none" class="card-text">
                            @foreach (var ozellik in data.Value.teknik_ozellikdata)
                            {
                                <li><b>@ozellik</b></li>
                            }
                        </ul>
                    }
                    <a asp-controller="Products" asp-action="ProductDetail" asp-route-id="@data.Value.Id" class="btn btn-primary">Devamı için Tıklayın</a>
                </div>
            </div>
        </div>
    }
</div>

<hr />
<div>
    @if (aciklama.Length > 100)
    {
        <p id="shortDesc" style="font-size:15px;font-family:cursive">
            @aciklama.Substring(0, 100)<a href="#" id="moreBtn" onclick="showMore(event)">... daha fazlası</a>

        </p>
        <p id="fullDesc" style="font-size:15px;font-family:cursive;display:none;">
            @aciklama
        </p>
    }
    else
    {
        <p style="font-size:15px;font-family:cursive">@aciklama</p>
    }
</div>



<script>


    document.getElementById("viewAllProducts").addEventListener("click", function () {
        var additionalProducts = document.querySelectorAll(".additional-product");
        for (var i = 0; i < additionalProducts.length; i++) {
            additionalProducts[i].style.display = "block";
        }
        this.style.display = "none"; // "Tüm Ürünleri Görüntüleyin" bağlantısını gizle

    });


    function attachDownloadEvent() {
        // "download-program" class'ına sahip tüm bağlantılar için
        $('.download-program').on('click', function (e) {
            // Varsayılan indirme davranışını engelle
            e.preventDefault();

            const href = $(this).attr('href');
            const download = $(this).attr('download');
            const productId = $(this).data('product-id'); // Ürün ID'sini al
            const fileExtension = download.split('.').pop(); // Dosya adından dosya uzantısını al

            console.log(download);
            console.log(fileExtension);
            // İlk olarak, indirme sayısını artır
            $.ajax({
                url: 'http://45.136.6.177:1345/api/Istatistics/IncreaseDownloadCount',
                type: 'POST',
                data: { productId: productId }, // Sadece ürün ID'sini gönder
                success: function () {
                    // İndirme sayısı artırıldıktan sonra, DownloadedFile işlemlerini yap
                    $.ajax({
                        url: 'http://45.136.6.177:1345/api/DownloadedFile/Post', // DownloadedFile işlemleri için endpoint
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({
                            product: { Id: productId }, // Product nesnesi içinde Id olarak gönder
                            FileName: download,
                            FileExtension: fileExtension,
                            DownloadCount: 1 // DownloadCount başlangıç değeri olarak 1 gönder
                        }),
                        success: function () {
                            // Her iki işlem de başarılı, dosyayı indir
                            const a = document.createElement('a');
                            a.href = href;
                            a.download = download;
                            document.body.appendChild(a);
                            a.click();
                            document.body.removeChild(a);
                        },
                        error: function (xhr, status, error) {
                            console.error("DownloadedFile işlemi başarısız:", error);
                        }
                    });
                },
                error: function (xhr, status, error) {
                    console.error('İndirme sayısı artırılamadı:', error);
                }
            });
        });
    }

    document.addEventListener('DOMContentLoaded', function () {
        attachDownloadEvent();
    });

    document.getElementById('showMoreBtn').addEventListener('click', function () {
        var hiddenCards = document.querySelectorAll('.product-card[style="display: none;"]');
        hiddenCards.forEach(function (card) {
            card.style.display = 'block';
        });
        this.style.display = 'none'; 
    });



    function showMore(event) {
        event.preventDefault(); // Prevent the default anchor action

        var shortDesc = document.getElementById('shortDesc');
        var fullDesc = document.getElementById('fullDesc');
        var moreBtn = document.getElementById('moreBtn');

        if (shortDesc.style.display === "none") {
            shortDesc.style.display = "block";
            fullDesc.style.display = "none";
            moreBtn.innerText = "... daha fazlası";
        } else {
            shortDesc.style.display = "none";
            fullDesc.style.display = "block";
            moreBtn.innerText = "daha az göster";
        }
    }
    var showMoreBtn = document.getElementById('showMoreBtn');
    if (showMoreBtn) {
        showMoreBtn.addEventListener('click', function () {
            var hiddenCards = document.querySelectorAll('.product-card[style="display: none;"]');
            hiddenCards.forEach(function (card) {
                card.style.display = 'block';
            });
            this.style.display = 'none';
        });
    }

    var moreBtn = document.getElementById('moreBtn');
    if (moreBtn) {
        moreBtn.addEventListener('click', showMore);
    }

</script>
